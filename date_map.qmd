---
title: "date_map"
format: html
editor: visual
---

## Loading Libraries

```{r}
library(lubridate)
library(purrr)
```


## Question 1

Generate a sequence of dates from January 1, 2015 to December 31, 2025, spaced by every two months. Extract the year, quarter, and ISO week number for each date.

```{r}
# solution
date_sequence <- seq(ymd("2015-01-01"), ymd("2025-12-31"), by = "2 months")
head(date_sequence)
```

```{r}
# extracting date year qyarter and iso week
date_info <- data.frame(
  Date = date_sequence,
  Year = year(date_sequence),
  Quarter = quarter(date_sequence),
  ISO_Week = isoweek(date_sequence)
)
head(date_info)
```

## Question 2

Given the following dates, compute the difference in months and weeks between each consecutive pair.

```{r}
# Loading in the data
sample_dates <- c("2018-03-15", "2020-07-20", "2023-01-10", "2025-09-05")
sample_dates <- ymd(sample_dates)

# Dividing the dates by month w/a remainder
months_diff <- interval(sample_dates[1:3], sample_dates[2:4]) %/% months(1)

# Dividing the dates by month and week w/a remainder
weeks_diff <- interval(sample_dates[1:3], sample_dates[2:4]) %% months(1) %/% weeks(1)
head(months_diff)
head(weeks_diff)

# I think I am probably missing a command here which would make this more simple, but this solution works

```

```{r}
question_2 <- data.frame(
  Start = sample_dates[1:3],
  End = sample_dates[2:4],
  Full_Months = months_diff,
  Remaining_Weeks = weeks_diff
)

question_2
```


## Question 3

Using map() and map_dbl(), compute the mean, median, and standard deviation for each numeric vector in the following list. 

```{r}
num_lists <- list(c(4, 16, 25, 36, 49), c(2.3, 5.7, 8.1, 11.4), c(10, 20, 30, 40, 50))

# df of mean median and sd
question_3 <- data.frame(
  Mean = map_dbl(num_lists, mean),
  Median = map_dbl(num_lists, median),
  SD = map_dbl(num_lists, sd)  
)

head(question_3)
```


## Question 4

Given a list of mixed date formats, use map() and possibly() from purrr to safely convert them to Date format and extract the month name.

```{r}
date_strings <- list("2023-06-10", "2022/12/25", "15-Aug-2021", "InvalidDate")

#converting
converted <- map(date_strings, possibly(~parse_date_time(.x, orders = c("ymd", "dmy")), otherwise = NA))
head(converted)

#converting to month name
month_names <- sapply(converted, possibly(months, otherwise = NA))
head(month_names)
```



